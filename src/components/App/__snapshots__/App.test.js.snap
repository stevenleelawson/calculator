// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <h1
                    className="App-title"
          >
                    Steven's Calculator
          </h1>
          <Display
                    displayedNumbers={
                              Array [
                                        "2",
                                        "+",
                                        "2",
                                      ]
                    }
          />
</header>,
        <div>
          <div
                    className="container"
          >
                    <ButtonContainer
                              handleClearClick={[Function]}
                              handleClick={[Function]}
                              handleDelClick={[Function]}
                              handleEvaluateClick={[Function]}
                              handlePercentClick={[Function]}
                              handleSqClick={[Function]}
                    />
          </div>
</div>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="App-title"
>
              Steven's Calculator
</h1>,
            <Display
              displayedNumbers={
                            Array [
                                          "2",
                                          "+",
                                          "2",
                                        ]
              }
/>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Steven's Calculator",
              "className": "App-title",
            },
            "ref": null,
            "rendered": "Steven's Calculator",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "displayedNumbers": Array [
                "2",
                "+",
                "2",
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
>
            <ButtonContainer
                        handleClearClick={[Function]}
                        handleClick={[Function]}
                        handleDelClick={[Function]}
                        handleEvaluateClick={[Function]}
                        handlePercentClick={[Function]}
                        handleSqClick={[Function]}
            />
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ButtonContainer
              handleClearClick={[Function]}
              handleClick={[Function]}
              handleDelClick={[Function]}
              handleEvaluateClick={[Function]}
              handlePercentClick={[Function]}
              handleSqClick={[Function]}
/>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleClearClick": [Function],
              "handleClick": [Function],
              "handleDelClick": [Function],
              "handleEvaluateClick": [Function],
              "handlePercentClick": [Function],
              "handleSqClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <h1
                        className="App-title"
            >
                        Steven's Calculator
            </h1>
            <Display
                        displayedNumbers={
                                    Array [
                                                "2",
                                                "+",
                                                "2",
                                              ]
                        }
            />
</header>,
          <div>
            <div
                        className="container"
            >
                        <ButtonContainer
                                    handleClearClick={[Function]}
                                    handleClick={[Function]}
                                    handleDelClick={[Function]}
                                    handleEvaluateClick={[Function]}
                                    handlePercentClick={[Function]}
                                    handleSqClick={[Function]}
                        />
            </div>
</div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="App-title"
>
                Steven's Calculator
</h1>,
              <Display
                displayedNumbers={
                                Array [
                                                "2",
                                                "+",
                                                "2",
                                              ]
                }
/>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Steven's Calculator",
                "className": "App-title",
              },
              "ref": null,
              "rendered": "Steven's Calculator",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "displayedNumbers": Array [
                  "2",
                  "+",
                  "2",
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="container"
>
              <ButtonContainer
                            handleClearClick={[Function]}
                            handleClick={[Function]}
                            handleDelClick={[Function]}
                            handleEvaluateClick={[Function]}
                            handlePercentClick={[Function]}
                            handleSqClick={[Function]}
              />
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ButtonContainer
                handleClearClick={[Function]}
                handleClick={[Function]}
                handleDelClick={[Function]}
                handleEvaluateClick={[Function]}
                handlePercentClick={[Function]}
                handleSqClick={[Function]}
/>,
              "className": "container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleClearClick": [Function],
                "handleClick": [Function],
                "handleDelClick": [Function],
                "handleEvaluateClick": [Function],
                "handlePercentClick": [Function],
                "handleSqClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
